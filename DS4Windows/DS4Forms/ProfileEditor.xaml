<UserControl x:Class="DS4WinWPF.DS4Forms.ProfileEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DS4WinWPF.DS4Forms"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:LocalizeDictionary.DesignCulture=""
             lex:ResxLocalizationProvider.DefaultAssembly="DS4Windows"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="1000">
    <UserControl.Resources>
        <local:ControlIndexCheck x:Key="controlIndexCheck" />
    </UserControl.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,4,0,10">
            <TextBlock Text="{lex:LocText Profile, Suffix=:}" VerticalAlignment="Center" Margin="0,0,8,0"/>
            <TextBox x:Name="profileNameTxt" Text="" Width="160" VerticalContentAlignment="Center" />
            <Button x:Name="saveBtn" Content="{lex:Loc SaveProfile}" Margin="10,0,0,0" Click="SaveBtn_Click" />
            <Button x:Name="cancelBtn" Content="{lex:Loc Cancel}" Margin="10,0,0,0" Click="CancelBtn_Click" />
            <Button x:Name="applyBtn" Content="{lex:Loc Apply}" Margin="10,0,0,0" Click="ApplyBtn_Click" IsEnabled="False" />
            <Button x:Name="presetBtn" Content="{lex:Loc SelectPreset}" Margin="10,0,0,0" Click="PresetBtn_Click" />
            <Button x:Name="keepSizeBtn" Margin="10,0,0,0" Click="KeepSizeBtn_Click">
                <StackPanel Orientation="Horizontal" Margin="0">
                    <Image x:Name="sizeImage" Source="/DS4Windows;component/Resources/size.png" Width="20" Height="20"/>
                    <TextBlock x:Name="sizeMsg" Text="Keep this window size after closing" Margin="4,0,0,0" VerticalAlignment="Center" />
                </StackPanel>

            </Button>
        </StackPanel>
        <TabControl x:Name="sidebarTabControl" Width="460" DockPanel.Dock="Left" SelectionChanged="SidebarTabControl_SelectionChanged">
            <TabItem Header="{lex:Loc Controls}">
                <DockPanel Width="440" LastChildFill="False">
                    <DockPanel.Background>
                        <SolidColorBrush Color="DimGray"/>
                    </DockPanel.Background>
                    <Canvas x:Name="conCanvas" Width="440" Height="240" Margin="0,10,0,0" DockPanel.Dock="Top" >
                        <Canvas.Resources>
                            <ContextMenu x:Key="presetMenu">
                                <MenuItem x:Name="controlNameItem" Header="{lex:Loc Name}" IsEnabled="False" />
                                <Separator />
                                <MenuItem Header="{lex:Loc Default}" Tag="0" Click="PresetMenuItem_Click" />
                                <MenuItem Header="{lex:Loc DPad}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="1" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Inverted}" Tag="1" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedX}" Tag="1" CommandParameter="2" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedY}" Tag="1" CommandParameter="3" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="1" CommandParameter="4" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="1" CommandParameter="5" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc LeftStick}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="2" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Inverted}" Tag="2" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedX}" Tag="2" CommandParameter="2" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedY}" Tag="2" CommandParameter="3" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="2" CommandParameter="4" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="2" CommandParameter="5" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc RightStick}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="3" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Inverted}" Tag="3" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedX}" Tag="3" CommandParameter="2" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedY}" Tag="3" CommandParameter="3" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="3" CommandParameter="4" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="3" CommandParameter="5" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc FaceButtons}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="4" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="4" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="4" CommandParameter="2" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc WASD}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="5" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="5" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="5" CommandParameter="2" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc ArrowKeys}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="6" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="6" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="6" CommandParameter="2" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc Mouse}">
                                    <MenuItem Header="{lex:Loc Normal}" Tag="7" CommandParameter="0" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Inverted}" Tag="7" CommandParameter="1" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedX}" Tag="7" CommandParameter="2" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc InvertedY}" Tag="7" CommandParameter="3" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate90}" Tag="7" CommandParameter="4" Click="PresetMenuItem_Click" />
                                    <MenuItem Header="{lex:Loc Rotate-90}" Tag="7" CommandParameter="5" Click="PresetMenuItem_Click" />
                                </MenuItem>
                                <MenuItem Header="{lex:Loc Unbound}" Tag="8" Click="PresetMenuItem_Click" />
                            </ContextMenu>
                        </Canvas.Resources>

                        <Image Source="/DS4Windows;component/Resources/DS4 Config.png" Width="440" Height="220" Stretch="Uniform"/>

                        <Button x:Name="ds4LightbarColorBtn" Width="138" Height="12" Canvas.Left="150" Canvas.Top="28"
                                Background="{x:Null}" BorderBrush="{x:Null}" MouseEnter="Ds4LightbarColorBtn_MouseEnter" MouseLeave="Ds4LightbarColorBtn_MouseLeave" Click="Ds4LightbarColorBtn_Click">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{x:Null}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Rectangle x:Name="lightbarRect" Fill="{Binding LightbarBrush,FallbackValue=Green}" Width="{Binding Path=Width, ElementName=ds4LightbarColorBtn}"
                                       Height="{Binding Path=Height, ElementName=ds4LightbarColorBtn}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="/DS4Windows;component/Resources/DS4 lightbar.png" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>

                        <Image x:Name="picBoxHover" IsEnabled="False" Source="/DS4Windows;component/Resources/DS4-Config_RS.png" Height="48" Width="48" Canvas.Left="447" Canvas.Top="5" />
                        <Image x:Name="picBoxHover2" IsEnabled="False" Source="/DS4Windows;component/Resources/DS4-Config_RS.png" Height="48" Width="48" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" />

                        <Button Content="{lex:Loc Cross}" x:Name="crossConBtn" Canvas.Left="330" Canvas.Top="125" Width="26" Height="26" Click="HoverConBtn_Click" Style="{StaticResource NoBGHoverBtn}" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc Circle}" x:Name="circleConBtn" Canvas.Left="357" Canvas.Top="99" Width="26" Height="26" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc Square}" x:Name="squareConBtn" Canvas.Left="300" Canvas.Top="98" Width="26" Height="26" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc Triangle}" x:Name="triangleConBtn" Canvas.Left="330" Canvas.Top="74" Width="26" Height="26" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" MouseRightButtonUp="ConBtn_MouseRightButtonUp" />

                        <Button Content="{lex:Loc L1}" x:Name="l1ConBtn" Canvas.Left="75" Canvas.Top="22" Width="50" Height="18" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc R1}" x:Name="r1ConBtn" Canvas.Left="317" Canvas.Top="22" Width="50" Height="18" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc L2}" x:Name="l2ConBtn" Canvas.Left="78" Canvas.Top="0" Width="46" Height="20" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc R2}" x:Name="r2ConBtn" Canvas.Left="316" Canvas.Top="0" Width="46" Height="20" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />

                        <Button Content="{lex:Loc Share}" x:Name="shareConBtn" Canvas.Left="134" Canvas.Top="63" Width="16" Height="24" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc Options}" x:Name="optionsConBtn" Canvas.Left="291" Canvas.Top="63" Width="16" Height="24" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc Guide}" x:Name="guideConBtn" Canvas.Left="211" Canvas.Top="144" Width="20" Height="20" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc Mute}" x:Name="muteConBtn" Canvas.Left="0" Canvas.Top="0" Width="0" Height="0" Style="{StaticResource NoBGHoverBtn}" Visibility="Collapsed" />

                        <Button Content="{lex:Loc LeftTouch}" x:Name="leftTouchConBtn" Canvas.Left="158" Canvas.Top="69" Width="37" Height="51" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc Multi_Touch}" x:Name="multiTouchConBtn" Canvas.Left="199" Canvas.Top="74" Width="41" Height="45" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc RightTouch}" x:Name="rightTouchConBtn" Canvas.Left="251" Canvas.Top="70" Width="32" Height="53" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />
                        <Button Content="{lex:Loc TopTouch}" x:Name="topTouchConBtn" Canvas.Left="157" Canvas.Top="46" Width="125" Height="23" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave" />

                        <Button Content="{lex:Loc L3}" x:Name="l3ConBtn" Canvas.Left="138" Canvas.Top="147" Width="42" Height="42" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc LSU}" x:Name="lsuConBtn" Canvas.Left="150" Canvas.Top="140" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc LSR}" x:Name="lsrConBtn" Canvas.Left="172" Canvas.Top="162" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc LSD}" x:Name="lsdConBtn" Canvas.Left="150" Canvas.Top="180" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc LSL}" x:Name="lslConBtn" Canvas.Left="126" Canvas.Top="162" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />

                        <Button Content="{lex:Loc R3}" x:Name="r3ConBtn" Canvas.Left="262" Canvas.Top="149" Width="42" Height="42" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc RSU}" x:Name="rsuConBtn" Canvas.Left="275" Canvas.Top="142" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc RSR}" x:Name="rsrConBtn" Canvas.Left="298" Canvas.Top="162" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc RSD}" x:Name="rsdConBtn" Canvas.Left="275" Canvas.Top="180" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc RSL}" x:Name="rslConBtn" Canvas.Left="248" Canvas.Top="162" Width="17" Height="15" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />

                        <Button Content="{lex:Loc Up}" x:Name="upConBtn" Canvas.Left="88" Canvas.Top="74" Width="20" Height="35" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc Right}" x:Name="rightConBtn" Canvas.Left="103" Canvas.Top="103" Width="35" Height="20" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc Down}" x:Name="downConBtn" Canvas.Left="88" Canvas.Top="114" Width="20" Height="35" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />
                        <Button Content="{lex:Loc Left}" x:Name="leftConBtn" Canvas.Left="56" Canvas.Top="103" Width="35" Height="20" Style="{StaticResource NoBGHoverBtn}" Click="HoverConBtn_Click" MouseEnter="ContBtn_MouseEnter" MouseLeave="ContBtn_MouseLeave"
                                MouseRightButtonUp="ConBtn_MouseRightButtonUp" />

                        <Label x:Name="highlightControlDisplayLb" Content="" Canvas.Left="150" Canvas.Top="208" MinWidth="150"
                               HorizontalContentAlignment="Center">
                            <Label.Foreground>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                            </Label.Foreground>
                        </Label>
                    </Canvas>

                    <ListBox x:Name="mappingListBox" DockPanel.Dock="Bottom" Height="200" ItemsSource="{Binding Mappings}"
                                SelectedIndex="{Binding SelectedIndex}" Margin="6" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                MouseDoubleClick="MappingListBox_MouseDoubleClick">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding ControlName,StringFormat='\{0\}: '}" />
                                    <TextBlock Text="{Binding MappingName}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="specialActionsTab" Header="{lex:Loc SpecialActions}">
                <DockPanel x:Name="specialActionDockPanel">
                    <DockPanel x:Name="baseSpeActPanel" DockPanel.Dock="Top">
                        <UniformGrid Rows="1" Columns="3" DockPanel.Dock="Top">
                            <Button x:Name="newActionBtn" Content="{lex:Loc NewAction}" Margin="0,0,5,0" Click="NewActionBtn_Click" />
                            <Button x:Name="editActionBtn" Content="{lex:Loc EditAction}" IsEnabled="{Binding ItemSelected}" Margin="5,0" Click="EditActionBtn_Click" />
                            <Button x:Name="removeActionBtn" Content="{lex:Loc RemoveAction}" IsEnabled="{Binding ItemSelected}" Margin="5,0,0,0" Click="RemoveActionBtn_Click" />
                        </UniformGrid>

                        <ListView x:Name="specialActionsLV" ItemsSource="{Binding ActionCol}" SelectedIndex="{Binding SpecialActionIndex}" SelectedItem="{Binding CurrentSpecialActionItem,Mode=OneWayToSource}" DockPanel.Dock="Bottom" Margin="0,10,0,0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="{lex:Loc Name}" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox IsChecked="{Binding Active}" Click="SpecialActionCheckBox_Click" />
                                                    <TextBlock Text="{Binding ActionName}" Margin="4,0,0,0" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="{lex:Loc Trigger}" DisplayMemberBinding="{Binding Controls}" Width="100" />
                                    <GridViewColumn Header="{lex:Loc Action}" DisplayMemberBinding="{Binding TypeName}" Width="200" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </DockPanel>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="contReadingsTab" Header="{lex:Loc ControllerReadings}" IsEnabled="False">
                <local:ControllerReadingsControl x:Name="conReadingsUserCon" />
            </TabItem>
        </TabControl>

        <TabControl x:Name="profileSettingsTabCon" DockPanel.Dock="Right" Margin="10,0,0,0" Padding="6">
            <TabControl.Resources>
                <Thickness x:Key="spaceMargin" Bottom="8" />
            </TabControl.Resources>

            <TabItem Header="{lex:Loc AxisConfig}">
                <TabItem.Resources>
                    <Thickness x:Key="spaceMargin" Left="10" Bottom="6" />
                    <Style x:Key="gridRowHeight" TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="30" />
                    </Style>
                </TabItem.Resources>
                <ScrollViewer>
                    <StackPanel>
                        <GroupBox Header="{lex:Loc LS}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{lex:Loc OutputMode}" />
                                    <ComboBox MinWidth="160" SelectedIndex="{Binding LSOutputIndex,FallbackValue='0'}" VerticalContentAlignment="Center" Margin="10,0,0,0">
                                        <ComboBoxItem Content="None" />
                                        <ComboBoxItem Content="Controls" />
                                        <ComboBoxItem Content="Flick Stick" />
                                    </ComboBox>
                                </StackPanel>

                                <TabControl SelectedIndex="{Binding LSOutputIndex,Mode=OneWay,FallbackValue='0'}" BorderBrush="{x:Null}" Padding="0" Margin="0,10,0,0">
                                    <TabItem Header="{lex:Loc None}"  Visibility="Collapsed" />
                                    <TabItem Header="{lex:Loc Controls}" Visibility="Collapsed">
                                        <DockPanel>
                                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                                <Label Content="{lex:Loc DeadZoneType}" />
                                                <ComboBox MinWidth="160" SelectedIndex="{Binding LSDeadTypeIndex,FallbackValue='0'}" VerticalContentAlignment="Center" Margin="10,0,0,0">
                                                    <ComboBoxItem Content="Radial" />
                                                    <ComboBoxItem Content="Axial" />
                                                </ComboBox>
                                            </StackPanel>

                                            <TabControl DockPanel.Dock="Top" SelectedIndex="{Binding LSDeadTypeIndex,Mode=OneWay,FallbackValue='0'}" BorderBrush="{x:Null}" Padding="0" Margin="0,8,0,8">
                                                <TabItem Header="{lex:Loc Radial}" Visibility="Collapsed">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                        </Grid.RowDefinitions>

                                                        <Label Content="{lex:Loc DeadZone_}" Grid.Row="0" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSDeadZone,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Grid.Row="0" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc MaxZone_}" Grid.Row="1" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSMaxZone}" FormatString="F2" MinWidth="50" Grid.Row="1" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc AntiDeadZone}" Grid.Row="2" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSAntiDeadZone}" FormatString="F2" MinWidth="50" Grid.Row="2" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc MaxOutput_}" Grid.Row="3" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSMaxOutput}" FormatString="F2" MinWidth="50" Grid.Row="3" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc VerticalScale_}" Grid.Row="4" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSVerticalScale}" FormatString="F2" MinWidth="50" Grid.Row="4" Grid.Column="1" Maximum="2.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc Sensitivity}" Grid.Row="5" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding LSSens}" MinWidth="50" Grid.Row="5" Grid.Column="1" Maximum="5.0" Minimum="0.5" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                    </Grid>
                                                </TabItem>

                                                <TabItem Header="{lex:Loc Axial}" Visibility="Collapsed">
                                                    <local:AxialStickUserControl x:Name="axialLSStickControl" />
                                                </TabItem>
                                            </TabControl>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                </Grid.RowDefinitions>

                                                <Label Content="{lex:Loc OutputCurve}" Grid.Row="0" Grid.Column="0" />
                                                <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding LSOutputCurveIndex}"
                                          Margin="{StaticResource spaceMargin}">
                                                    <ComboBoxItem Content="Linear" />
                                                    <ComboBoxItem Content="Enhanced Precision" />
                                                    <ComboBoxItem Content="Quadratic" />
                                                    <ComboBoxItem Content="Cubic" />
                                                    <ComboBoxItem Content="Easeout Quad" />
                                                    <ComboBoxItem Content="Easeout Cubic" />
                                                    <ComboBoxItem Content="Custom" />
                                                </ComboBox>

                                                <DockPanel Grid.Row="1" Grid.Column="1" IsEnabled="{Binding LSCustomCurveSelected}">
                                                    <Button x:Name="lsCustomEditorBtn" Content="{lex:Loc ...}" Tag="LS" Width="20" DockPanel.Dock="Right" Click="CustomEditorBtn_Click"
                                            Margin="{StaticResource spaceMargin}" />
                                                    <TextBox Text="{Binding LSCustomCurve,UpdateSourceTrigger=LostFocus,FallbackValue='0.00, 0.00, 1.00, 1.00'}" DockPanel.Dock="Left"
                                             Margin="{StaticResource spaceMargin}" />
                                                </DockPanel>

                                                <Label Content="{lex:Loc SquareStick}" Grid.Row="2" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right">
                                                    <CheckBox IsChecked="{Binding LSSquareStick}" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                    <xctk:DoubleUpDown d:IsHidden="True" FormatString="F1" Value="{Binding LSSquareRoundness,FallbackValue=5}"
                                                       MinWidth="100" Minimum="0.0" Maximum="1000.0" Increment="1.0" IsEnabled="{Binding LSSquareStick}"
                                                       Margin="{StaticResource spaceMargin}" />
                                                </StackPanel>

                                                <Label Content="{lex:Loc CurveInput}" Grid.Row="3" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right">
                                                    <xctk:DoubleUpDown d:IsHidden="True" MinWidth="100" Value="{Binding LSCurve}" Minimum="0" Maximum="100"
                                                       Margin="{StaticResource spaceMargin}" />
                                                    <Label Content="%" />
                                                </StackPanel>

                                                <Label Content="{lex:Loc Rotation_}" Grid.Row="4" Grid.Column="0" />
                                                <DockPanel Grid.Row="4" Grid.Column="1">
                                                    <TextBlock Text="&#xb0;" DockPanel.Dock="Right" FontSize="18" Margin="{StaticResource spaceMargin}" />
                                                    <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding LSRotation}"
                                                    Minimum="-180" Maximum="180"
                                                    Margin="{StaticResource spaceMargin}" />
                                                </DockPanel>

                                                <Label Content="{lex:Loc Fuzz}" Grid.Row="5" Grid.Column="0" />
                                                <DockPanel Grid.Row="5" Grid.Column="1">
                                                    <TextBlock Text="units" DockPanel.Dock="Right" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                    <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding LSFuzz}"
                                                    Minimum="0" Maximum="100"
                                                    Margin="{StaticResource spaceMargin}" />
                                                </DockPanel>

                                                <Label Content="{lex:Loc AntiSnapback}" Grid.Row="6" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right">
                                                    <CheckBox IsChecked="{Binding LSAntiSnapback}" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                    <xctk:DoubleUpDown d:IsHidden="True" FormatString="F1" Value="{Binding LSAntiSnapbackDelta, FallbackValue=135}"
                                                       MinWidth="100" Minimum="0.0" Maximum="256.0" Increment="1.0" IsEnabled="{Binding LSAntiSnapback}"
                                                       Margin="{StaticResource spaceMargin}" />
                                                    <TextBlock Text="units" DockPanel.Dock="Right" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                </StackPanel>

                                                <Label Content="{lex:Loc AntiSnapbackTiming}" Grid.Row="7" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Right">
                                                    <xctk:IntegerUpDown d:IsHidden="True" FormatString="F1" Value="{Binding LSAntiSnapbackTimeout}"
                                                       MinWidth="100" Minimum="0" Maximum="1000" Increment="1" IsEnabled="{Binding LSAntiSnapback}"
                                                       Margin="{StaticResource spaceMargin}" />
                                                    <TextBlock Text="ms" DockPanel.Dock="Right" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                </StackPanel>
                                            </Grid>
                                        </DockPanel>
                                    </TabItem>
                                    <TabItem Header="{lex:Loc FlickStick}" Visibility="Collapsed">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                <RowDefinition Style="{StaticResource gridRowHeight}" />
                                            </Grid.RowDefinitions>

                                            <Label Content="{lex:Loc RealWorldCalibration}" ContentStringFormat="{}{0}:" Grid.Row="0" Grid.Column="0" />
                                            <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSFlickRWC,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Grid.Row="0" Grid.Column="1" Maximum="100.0" Minimum="1.0" Increment="1.0"
                                                   Margin="{StaticResource spaceMargin}" />

                                            <Label Content="{lex:Loc FlickThreshold}" ContentStringFormat="{}{0}:" Grid.Row="1" Grid.Column="0" />
                                            <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSFlickThreshold,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Grid.Row="1" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                            <Label Content="{lex:Loc FlickTime}" ContentStringFormat="{}{0}:" Grid.Row="2" Grid.Column="0" />
                                            <DockPanel Grid.Row="2" Grid.Column="1">
                                                <TextBlock Text="sec." DockPanel.Dock="Right" Margin="{StaticResource spaceMargin}" />
                                                <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSFlickTime,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Maximum="10.0" Minimum="0.01" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                            </DockPanel>

                                            <Label Content="{lex:Loc MinAngleThreshold}" ContentStringFormat="{}{0}:" Grid.Row="3" Grid.Column="0" />
                                            <DockPanel Grid.Row="3" Grid.Column="1">
                                                <TextBlock Text="&#xb0;" DockPanel.Dock="Right" FontSize="18" Margin="{StaticResource spaceMargin}" />
                                                <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding LSMinAngleThreshold,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Maximum="180.0" Minimum="0.0" Increment="0.5"
                                                   Margin="{StaticResource spaceMargin}" />
                                            </DockPanel>

                                        </Grid>
                                    </TabItem>
                                </TabControl>
                            </StackPanel>


                        </GroupBox>

                        <GroupBox Header="{lex:Loc RS}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{lex:Loc OutputMode}" />
                                    <ComboBox MinWidth="160" SelectedIndex="{Binding RSOutputIndex,FallbackValue='0'}" VerticalContentAlignment="Center" Margin="10,0,0,0">
                                        <ComboBoxItem Content="None" />
                                        <ComboBoxItem Content="Controls" />
                                        <ComboBoxItem Content="Flick Stick" />
                                    </ComboBox>
                                </StackPanel>


                                <TabControl SelectedIndex="{Binding RSOutputIndex,Mode=OneWay,FallbackValue='0'}" BorderBrush="{x:Null}">
                                    <TabItem Header="{lex:Loc None}"  Visibility="Collapsed" />
                                    <TabItem Header="{lex:Loc Controls}" Visibility="Collapsed">
                                        <DockPanel>
                                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                                <Label Content="{lex:Loc DeadZoneType}" />
                                                <ComboBox MinWidth="160" SelectedIndex="{Binding RSDeadTypeIndex,FallbackValue='0'}" VerticalContentAlignment="Center" Margin="10,0,0,0">
                                                    <ComboBoxItem Content="Radial" />
                                                    <ComboBoxItem Content="Axial" />
                                                </ComboBox>
                                            </StackPanel>

                                            <TabControl DockPanel.Dock="Top" SelectedIndex="{Binding RSDeadTypeIndex,Mode=OneWay,FallbackValue='0'}" BorderBrush="{x:Null}" Padding="0" Margin="0,8,0,8">
                                                <TabItem Header="{lex:Loc Radial}" Visibility="Collapsed">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                            <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                        </Grid.RowDefinitions>

                                                        <Label Content="{lex:Loc DeadZone_}" Grid.Row="0" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSDeadZone,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Grid.Row="0" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc MaxZone_}" Grid.Row="1" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSMaxZone}" FormatString="F2" MinWidth="50" Grid.Row="1" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc AntiDeadZone}" Grid.Row="2" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSAntiDeadZone}" FormatString="F2" MinWidth="50" Grid.Row="2" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc MaxOutput_}" Grid.Row="3" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSMaxOutput}" FormatString="F2" MinWidth="50" Grid.Row="3" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc VerticalScale_}" Grid.Row="4" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSVerticalScale}" FormatString="F2" MinWidth="50" Grid.Row="4" Grid.Column="1" Maximum="2.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                                        <Label Content="{lex:Loc Sensitivity}" Grid.Row="5" Grid.Column="0" />
                                                        <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding RSSens}" MinWidth="50" Grid.Row="5" Grid.Column="1" Maximum="5.0" Minimum="0.5" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                                    </Grid>
                                                </TabItem>
                                                <TabItem Header="{lex:Loc Axial}" Visibility="Collapsed">
                                                    <local:AxialStickUserControl x:Name="axialRSStickControl" />
                                                </TabItem>
                                            </TabControl>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                    <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                </Grid.RowDefinitions>

                                                <Label Content="{lex:Loc OutputCurve}" Grid.Row="0" Grid.Column="0" />
                                                <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding RSOutputCurveIndex}"
                                          Margin="{StaticResource spaceMargin}">
                                                    <ComboBoxItem Content="Linear" />
                                                    <ComboBoxItem Content="Enhanced Precision" />
                                                    <ComboBoxItem Content="Quadratic" />
                                                    <ComboBoxItem Content="Cubic" />
                                                    <ComboBoxItem Content="Easeout Quad" />
                                                    <ComboBoxItem Content="Easeout Cubic" />
                                                    <ComboBoxItem Content="Custom" />
                                                </ComboBox>

                                                <DockPanel Grid.Row="1" Grid.Column="1" IsEnabled="{Binding RSCustomCurveSelected}">
                                                    <Button x:Name="rsCustomEditorBtn" Content="{lex:Loc ...}" Tag="RS" Width="20" DockPanel.Dock="Right" Click="CustomEditorBtn_Click"
                                            Margin="{StaticResource spaceMargin}" />
                                                    <TextBox Text="{Binding RSCustomCurve,UpdateSourceTrigger=LostFocus,FallbackValue='0.00, 0.00, 1.00, 1.00'}" DockPanel.Dock="Left"
                                             Margin="{StaticResource spaceMargin}" />
                                                </DockPanel>

                                                <Label Content="{lex:Loc SquareStick}" Grid.Row="2" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right">
                                                    <CheckBox IsChecked="{Binding RSSquareStick}" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                    <xctk:DoubleUpDown d:IsHidden="True" FormatString="F1" Value="{Binding RSSquareRoundness,FallbackValue=5}"
                                                       MinWidth="100" Minimum="0.0" Maximum="1000.0" Increment="1.0" IsEnabled="{Binding RSSquareStick}"
                                                       Margin="{StaticResource spaceMargin}" />
                                                </StackPanel>

                                                <Label Content="{lex:Loc CurveInput}" Grid.Row="3" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right">
                                                    <xctk:DoubleUpDown d:IsHidden="True" MinWidth="100" Value="{Binding RSCurve}" Minimum="0" Maximum="100"
                                                       Margin="{StaticResource spaceMargin}"/>
                                                    <Label Content="%" />
                                                </StackPanel>

                                                <Label Content="{lex:Loc Rotation_}" Grid.Row="4" Grid.Column="0" />
                                                <DockPanel Grid.Row="4" Grid.Column="1">
                                                    <TextBlock Text="&#xb0;" DockPanel.Dock="Right" FontSize="18" Margin="{StaticResource spaceMargin}" />
                                                    <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding RSRotation}"
                                                    Minimum="-180" Maximum="180"
                                                    Margin="{StaticResource spaceMargin}" />
                                                </DockPanel>

                                                <Label Content="{lex:Loc Fuzz}" Grid.Row="5" Grid.Column="0" />
                                                <DockPanel Grid.Row="5" Grid.Column="1">
                                                    <TextBlock Text="units" DockPanel.Dock="Right" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                    <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding RSFuzz}"
                                                    Minimum="0" Maximum="100"
                                                    Margin="{StaticResource spaceMargin}" />
                                                </DockPanel>

                                                <Label Content="{lex:Loc AntiSnapback}" Grid.Row="6" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right">
                                                    <CheckBox IsChecked="{Binding RSAntiSnapback}" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                    <xctk:DoubleUpDown d:IsHidden="True" FormatString="F1" Value="{Binding RSAntiSnapbackDelta, FallbackValue=135}"
                                                       MinWidth="100" Minimum="0.0" Maximum="256.0" Increment="1.0" IsEnabled="{Binding LSAntiSnapback}"
                                                       Margin="{StaticResource spaceMargin}" />
                                                    <TextBlock Text="units" DockPanel.Dock="Right" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                </StackPanel>

                                                <Label Content="{lex:Loc AntiSnapbackTiming}" Grid.Row="7" Grid.Column="0" />
                                                <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Right">
                                                    <xctk:IntegerUpDown d:IsHidden="True" FormatString="F1" Value="{Binding RSAntiSnapbackTimeout}"
                                                       MinWidth="100" Minimum="0" Maximum="1000" Increment="1" IsEnabled="{Binding RSAntiSnapback}"
                                                       Margin="{StaticResource spaceMargin}" />
                                                    <TextBlock Text="ms" DockPanel.Dock="Right" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                                </StackPanel>
                                            </Grid>
                                        </DockPanel>

                                    </TabItem>
                                    <TabItem Header="{lex:Loc FlickStick}" Visibility="Collapsed">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                <RowDefinition Style="{StaticResource gridRowHeight}" />
                                                <RowDefinition Style="{StaticResource gridRowHeight}" />
                                            </Grid.RowDefinitions>

                                            <Label Content="{lex:Loc RealWorldCalibration}" ContentStringFormat="{}{0}:" Grid.Row="0" Grid.Column="0" />
                                            <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSFlickRWC,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Grid.Row="0" Grid.Column="1" Maximum="100.0" Minimum="1.0" Increment="1.0"
                                                   Margin="{StaticResource spaceMargin}" />

                                            <Label Content="{lex:Loc FlickThreshold}" ContentStringFormat="{}{0}:" Grid.Row="1" Grid.Column="0" />
                                            <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSFlickThreshold,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Grid.Row="1" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                            <Label Content="{lex:Loc FlickTime}" ContentStringFormat="{}{0}:" Grid.Row="2" Grid.Column="0" />
                                            <DockPanel Grid.Row="2" Grid.Column="1">
                                                <TextBlock Text="sec." DockPanel.Dock="Right" Margin="{StaticResource spaceMargin}" />
                                                <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSFlickTime,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Maximum="10.0" Minimum="0.01" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                            </DockPanel>

                                            <Label Content="{lex:Loc MinAngleThreshold}" ContentStringFormat="{}{0}:" Grid.Row="3" Grid.Column="0" />
                                            <DockPanel Grid.Row="3" Grid.Column="1">
                                                <TextBlock Text="&#xb0;" DockPanel.Dock="Right" FontSize="18" Margin="{StaticResource spaceMargin}" />
                                                <xctk:DoubleUpDown d:IsHidden="True" Value="{Binding RSMinAngleThreshold,UpdateSourceTrigger=LostFocus}" FormatString="F2" MinWidth="50" Maximum="180.0" Minimum="0.0" Increment="0.5"
                                                   Margin="{StaticResource spaceMargin}" />
                                            </DockPanel>
                                        </Grid>
                                    </TabItem>
                                </TabControl>
                            </StackPanel>


                        </GroupBox>

                        <GroupBox Header="{lex:Loc L2AndR2}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="L2" Grid.Column="1" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,8" />
                                <TextBlock Text="R2" Grid.Column="2" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,8" />

                                <Label Content="{lex:Loc DeadZone_}" Grid.Row="1" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding L2DeadZone}" MinWidth="50" Grid.Row="1" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding R2DeadZone}" MinWidth="50" Grid.Row="1" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc MaxZone_}" Grid.Row="2" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding L2MaxZone}" MinWidth="50" Grid.Row="2" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding R2MaxZone}" MinWidth="50" Grid.Row="2" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc AntiDeadZone}" Grid.Row="3" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding L2AntiDeadZone}" MinWidth="50" Grid.Row="3" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding R2AntiDeadZone}" MinWidth="50" Grid.Row="3" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc MaxOutput_}" Grid.Row="4" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding L2MaxOutput}" MinWidth="50" Grid.Row="4" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding R2MaxOutput}" MinWidth="50" Grid.Row="4" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc Sensitivity}" Grid.Row="5" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding L2Sens}" MinWidth="50" Grid.Row="5" Grid.Column="1" Maximum="10.0" Minimum="0.1" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding R2Sens}" MinWidth="50" Grid.Row="5" Grid.Column="2" Maximum="10.0" Minimum="0.1" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc OutputCurve}" Grid.Row="6" Grid.Column="0" />
                                <ComboBox Grid.Row="6" Grid.Column="1" SelectedIndex="{Binding L2OutputCurveIndex}"
                                          Margin="{StaticResource spaceMargin}">
                                    <ComboBoxItem Content="Linear" />
                                    <ComboBoxItem Content="Enhanced Precision" />
                                    <ComboBoxItem Content="Quadratic" />
                                    <ComboBoxItem Content="Cubic" />
                                    <ComboBoxItem Content="Easeout Quad" />
                                    <ComboBoxItem Content="Easeout Cubic" />
                                    <ComboBoxItem Content="Custom" />
                                </ComboBox>
                                <ComboBox Grid.Row="6" Grid.Column="2" SelectedIndex="{Binding R2OutputCurveIndex}"
                                          Margin="{StaticResource spaceMargin}">
                                    <ComboBoxItem Content="Linear" />
                                    <ComboBoxItem Content="Enhanced Precision" />
                                    <ComboBoxItem Content="Quadratic" />
                                    <ComboBoxItem Content="Cubic" />
                                    <ComboBoxItem Content="Easeout Quad" />
                                    <ComboBoxItem Content="Easeout Cubic" />
                                    <ComboBoxItem Content="Custom" />
                                </ComboBox>

                                <DockPanel Grid.Row="7" Grid.Column="1" IsEnabled="{Binding L2CustomCurveSelected}">
                                    <Button x:Name="l2CustomEditorBtn" Content="{lex:Loc ProfileEditor0727}" Tag="L2" Width="20" DockPanel.Dock="Right" Click="CustomEditorBtn_Click"
                                            Margin="{StaticResource spaceMargin}" />
                                    <TextBox Text="{Binding L2CustomCurve,FallbackValue='0.00, 0.00, 1.00, 1.00'}" DockPanel.Dock="Left"
                                             Margin="{StaticResource spaceMargin}" />
                                </DockPanel>
                                <DockPanel Grid.Row="7" Grid.Column="2"  IsEnabled="{Binding R2CustomCurveSelected}">
                                    <Button x:Name="r2CustomEditorBtn" Content="{lex:Loc ProfileEditor0733}" Tag="R2" Width="20" DockPanel.Dock="Right" Click="CustomEditorBtn_Click"
                                            Margin="{StaticResource spaceMargin}" />
                                    <TextBox Text="{Binding R2CustomCurve,FallbackValue='0.00, 0.00, 1.00, 1.00'}" DockPanel.Dock="Left"
                                             Margin="{StaticResource spaceMargin}" />
                                </DockPanel>

                                <Label Content="{lex:Loc TwoStageMode}" Grid.Row="8" Grid.Column="0" />
                                <ComboBox Grid.Row="8" Grid.Column="1" ItemsSource="{Binding Path=TwoStageModeChoices}"
                                          DisplayMemberPath="DisplayName" SelectedValuePath="Mode" SelectedValue="{Binding L2TriggerMode}" Margin="{StaticResource spaceMargin}" />

                                <ComboBox Grid.Row="8" Grid.Column="2" ItemsSource="{Binding Path=TwoStageModeChoices}"
                                          DisplayMemberPath="DisplayName" SelectedValuePath="Mode" SelectedValue="{Binding R2TriggerMode}" Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc FullPullBtn}" Grid.Row="9" Grid.Column="0" />
                                <DockPanel Grid.Row="9" Grid.Column="1">
                                    <Button Content="{lex:Loc FullPull}" MinWidth="40" Tag="{Binding L2FullPull, Source={StaticResource controlIndexCheck}}" Click="TriggerFullPullBtn_Click"
                                            Margin="{StaticResource spaceMargin}" DockPanel.Dock="Top" />
                                    <Label x:Name="l2FullPullLb" Content="{Binding MappingName,FallbackValue=Unassigned}"
                                           Margin="{StaticResource spaceMargin}" HorizontalAlignment="Center" DockPanel.Dock="Top"/>
                                </DockPanel>
                                <DockPanel Grid.Row="9" Grid.Column="2">
                                    <Button Content="{lex:Loc FullPull}" MinWidth="40" Tag="{Binding R2FullPull, Source={StaticResource controlIndexCheck}}" Click="TriggerFullPullBtn_Click"
                                            Margin="{StaticResource spaceMargin}" DockPanel.Dock="Top" />
                                    <Label x:Name="r2FullPullLb" Content="{Binding MappingName,FallbackValue=Unassigned}"
                                           Margin="{StaticResource spaceMargin}" HorizontalAlignment="Center" DockPanel.Dock="Top" />
                                </DockPanel>

                                <Label Content="{lex:Loc HipFireDelay}" Grid.Row="10" Grid.Column="0" />
                                <DockPanel Grid.Row="10" Grid.Column="1">
                                    <Label Content="{lex:Loc Ms}" DockPanel.Dock="Right" />
                                    <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding L2HipFireTime}" MinWidth="50" Maximum="5000" Minimum="0" Increment="10"
                                                   Margin="{StaticResource spaceMargin}" />
                                </DockPanel>

                                <DockPanel Grid.Row="10" Grid.Column="2">
                                    <Label Content="{lex:Loc Ms}" DockPanel.Dock="Right" />
                                    <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding R2HipFireTime}" MinWidth="50" Maximum="5000" Minimum="0" Increment="10"
                                                   Margin="{StaticResource spaceMargin}" />
                                </DockPanel>

                                <Label Content="{lex:Loc TriggerEffect}" Grid.Row="11" Grid.Column="0" />

                                <ComboBox Grid.Row="11" Grid.Column="1" ItemsSource="{Binding Path=TriggerEffectChoices}"
                                          DisplayMemberPath="DisplayName" SelectedValuePath="Mode" SelectedValue="{Binding L2TriggerEffect}" Margin="{StaticResource spaceMargin}" />
                                <ComboBox Grid.Row="11" Grid.Column="2" ItemsSource="{Binding Path=TriggerEffectChoices}"
                                          DisplayMemberPath="DisplayName" SelectedValuePath="Mode" SelectedValue="{Binding R2TriggerEffect}" Margin="{StaticResource spaceMargin}" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="{lex:Loc SixAxis}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                    <RowDefinition Style="{StaticResource gridRowHeight}"></RowDefinition>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="X" Grid.Column="1" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,8" />
                                <TextBlock Text="Z" Grid.Column="2"  FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,8" />

                                <Label Content="{lex:Loc DeadZone_}" Grid.Row="1" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SXDeadZone}" MinWidth="50" Grid.Row="1" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SZDeadZone}" MinWidth="50" Grid.Row="1" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc MaxZone_}" Grid.Row="2" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SXMaxZone}" MinWidth="50" Grid.Row="2" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SZMaxZone}" MinWidth="50" Grid.Row="2" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc AntiDeadZone}" Grid.Row="3" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SXAntiDeadZone}" MinWidth="50" Grid.Row="3" Grid.Column="1" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SZAntiDeadZone}" MinWidth="50" Grid.Row="3" Grid.Column="2" Maximum="1.0" Minimum="0.0" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc Sensitivity}" Grid.Row="4" Grid.Column="0" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SXSens}" MinWidth="50" Grid.Row="4" Grid.Column="1" Maximum="5.0" Minimum="0.5" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />
                                <xctk:DoubleUpDown d:IsHidden="True" FormatString="F2" Value="{Binding SZSens}" MinWidth="50" Grid.Row="4" Grid.Column="2" Maximum="5.0" Minimum="0.5" Increment="0.1"
                                                   Margin="{StaticResource spaceMargin}" />

                                <Label Content="{lex:Loc OutputCurve}" Grid.Row="5" Grid.Column="0" />
                                <ComboBox Grid.Row="5" Grid.Column="1" SelectedIndex="{Binding SXOutputCurveIndex}"
                                          Margin="{StaticResource spaceMargin}">
                                    <ComboBoxItem Content="Linear" />
                                    <ComboBoxItem Content="Enhanced Precision" />
                                    <ComboBoxItem Content="Quadratic" />
                                    <ComboBoxItem Content="Cubic" />
                                    <ComboBoxItem Content="Easeout Quad" />
                                    <ComboBoxItem Content="Easeout Cubic" />
                                    <ComboBoxItem Content="Custom" />
                                </ComboBox>
                                <ComboBox Grid.Row="5" Grid.Column="2" SelectedIndex="{Binding SZOutputCurveIndex}"
                                          Margin="{StaticResource spaceMargin}">
                                    <ComboBoxItem Content="Linear" />
                                    <ComboBoxItem Content="Enhanced Precision" />
                                    <ComboBoxItem Content="Quadratic" />
                                    <ComboBoxItem Content="Cubic" />
                                    <ComboBoxItem Content="Easeout Quad" />
                                    <ComboBoxItem Content="Easeout Cubic" />
                                    <ComboBoxItem Content="Custom" />
                                </ComboBox>

                                <DockPanel Grid.Row="6" Grid.Column="1" IsEnabled="{Binding SXCustomCurveSelected}">
                                    <Button x:Name="sxCustomEditorBtn" Content="{lex:Loc ...}" Tag="SX" Width="20" DockPanel.Dock="Right" Click="CustomEditorBtn_Click"
                                            Margin="{StaticResource spaceMargin}" />
                                    <TextBox Text="{Binding SXCustomCurve,FallbackValue='0.00, 0.00, 1.00, 1.00'}" DockPanel.Dock="Left"
                                             Margin="{StaticResource spaceMargin}" />
                                </DockPanel>
                                <DockPanel Grid.Row="6" Grid.Column="2" IsEnabled="{Binding SZCustomCurveSelected}">
                                    <Button x:Name="szCustomEditorBtn" Content="{lex:Loc ...}" Tag="SZ" Width="20" DockPanel.Dock="Right" Click="CustomEditorBtn_Click"
                                           Margin="{StaticResource spaceMargin}" />
                                    <TextBox Text="{Binding SZCustomCurve,FallbackValue='0.00, 0.00, 1.00, 1.00'}" DockPanel.Dock="Left"
                                             Margin="{StaticResource spaceMargin}" />
                                </DockPanel>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="{lex:Loc Lightbar}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{lex:Loc Mode}" />
                        <ComboBox x:Name="lightbarModeCombo" Width="160" SelectedIndex="{Binding LightbarModeIndex, FallbackValue=0}"
                                  VerticalContentAlignment="Center" Margin="10,0,0,0">
                            <ComboBoxItem Content="Normal" />
                            <ComboBoxItem Content="Passthru" />
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Visibility="{Binding DS4WinLightVisible,Mode=OneWay}">
                        <StackPanel Orientation="Horizontal">
                            <GroupBox x:Name="colorGB" Header="{lex:Loc Color}" Padding="4">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{lex:Loc ColorR}" />
                                        <Slider Value="{Binding MainColorR}" Minimum="0" Maximum="255" ToolTip="{Binding MainColorR}" MinWidth="100" Background="{Binding MainColorRString, FallbackValue=Red}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{lex:Loc ColorG}" />
                                        <Slider Value="{Binding MainColorG}" MinWidth="100" Minimum="0" Maximum="255" ToolTip="{Binding MainColorG}" Background="{Binding MainColorGString, FallbackValue=Lime}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{lex:Loc ColorB}" />
                                        <Slider Value="{Binding MainColorB}" MinWidth="100" Minimum="0" Maximum="255" ToolTip="{Binding MainColorB}" Background="{Binding MainColorBString, FallbackValue=Blue}"/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox x:Name="emptyColorGB" Header="{lex:Loc Empty}" Padding="4">
                                <StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{lex:Loc ColorR}" />
                                        <Slider Value="{Binding LowColorR}" MinWidth="100" Minimum="0" Maximum="255" ToolTip="{Binding LowColorR}" Background="{Binding LowColorRString, FallbackValue=Red}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{lex:Loc ColorG}" />
                                        <Slider Value="{Binding LowColorG}" MinWidth="100" Minimum="0" Maximum="255" ToolTip="{Binding LowColorG}" Background="{Binding LowColorGString, FallbackValue=Lime}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{lex:Loc ColorB}" />
                                        <Slider Value="{Binding LowColorB}" MinWidth="100" Minimum="0" Maximum="255" ToolTip="{Binding LowColorB}" Background="{Binding LowColorBString, FallbackValue=Blue}"/>
                                    </StackPanel>

                                    <Button x:Name="lowColorBtn" Width="10" Height="10" Background="{Binding LowColor}" HorizontalAlignment="Right" Margin="0,6,0,0" Click="LowColorBtn_Click" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <ComboBox x:Name="flashTypeCombo" SelectedIndex="{Binding FlashTypeIndex,FallbackValue=0}">
                                <ComboBoxItem Content="Flash at"/>
                                <ComboBoxItem Content="Pulse at"/>
                            </ComboBox>
                            <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding FlashAt,FallbackValue=0}" MinWidth="50"
                                            Minimum="-10" Maximum="100" Increment="10" />
                            <Label Content="%" />
                            <Button x:Name="flashColorBtn" Width="20" Height="20" Background="{Binding FlashColor,FallbackValue=Blue}"
                                ToolTip="{lex:Loc Resources:FlashAtTip}" Click="FlashColorBtn_Click" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <Label Content="{lex:Loc WhileCharging}"/>
                            <ComboBox Margin="8,0,0,0" SelectedIndex="{Binding ChargingType,FallbackValue=0}">
                                <ComboBoxItem Content="Normal" />
                                <ComboBoxItem Content="Pulse" />
                                <ComboBoxItem Content="Rainbow" />
                                <ComboBoxItem Content="Color" />
                            </ComboBox>
                            <Button x:Name="chargingColorBtn" Width="20" Height="20" Background="{Binding ChargingColor,FallbackValue=Blue}"
                                Visibility="{Binding ChargingColorVisible}" Click="ChargingColorBtn_Click" Margin="20,0,0,0" />
                        </StackPanel>

                        <CheckBox x:Name="colorByBatteryPerCk" Content="{lex:Loc ColorByBatteryPercent}" IsChecked="{Binding ColorBatteryPercent}"
                              ToolTip="{lex:Loc Resources:LightByBatteryTip}" Click="ColorByBatteryPerCk_Click" Margin="0,10,0,0" />

                        <StackPanel Orientation="Horizontal" Height="60" Margin="0,10,0,0">
                            <Button x:Name="rainbowBtn" Height="20" Width="20"
                                ToolTip="{lex:Loc Resources:AlwaysRainbow}" Click="RainbowBtn_Click">
                                <Button.Content>
                                    <Image Source="/DS4Windows;component/Resources/rainbow.png" />
                                </Button.Content>
                            </Button>
                            <xctk:IntegerUpDown MinWidth="30" Height="30" Minimum="0" Maximum="60" Increment="1" Margin="8,0,0,0"
                                            Value="{Binding Rainbow,FallbackValue=5}" IsEnabled="{Binding RainbowExists}" />
                            <Label Content="{lex:Loc SecsPerCycle}" Padding="0" Margin="8,0,0,0" VerticalContentAlignment="Center" />
                            <StackPanel Margin="8,0,0,0" VerticalAlignment="Center">
                                <TextBlock Text="{Binding MaxSatRainbow,FallbackValue=100,StringFormat=Max Sat. {0:N2}%}" Margin="0,0,0,5" />
                                <Slider Value="{Binding MaxSatRainbow,FallbackValue=100}" Minimum="0" Maximum="100" Width="100" IsEnabled="{Binding RainbowExists}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="{lex:Loc Touchpad}">
                <TabItem.Resources>
                    <Thickness x:Key="spaceMargin" Bottom="8" />
                </TabItem.Resources>

                <StackPanel Margin="4">
                    <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                        <Label Content="{lex:Loc OutputMode}" />
                        <ComboBox x:Name="touchpadOutModeCombo" Width="160" SelectedIndex="{Binding TouchpadOutputIndex, FallbackValue='0'}" VerticalContentAlignment="Center" Margin="10,0,0,0">
                            <ComboBoxItem Content="Mouse" />
                            <ComboBoxItem Content="Controls" />
                            <ComboBoxItem Content="Absolute Mouse" />
                            <ComboBoxItem Content="Passthru" />
                        </ComboBox>
                    </StackPanel>

                    <TabControl x:Name="touchOutputTabControl" SelectedIndex="{Binding TouchpadOutputIndex, FallbackValue='0'}" BorderBrush="{x:Null}" Margin="{StaticResource spaceMargin}">
                        <TabItem Header="{lex:Loc Mouse}" Visibility="Collapsed">
                            <StackPanel>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Margin="{StaticResource spaceMargin}">
                                        <CheckBox Content="{lex:Loc TouchSlide}" IsChecked="{Binding TouchSenExists}" VerticalAlignment="Center" />
                                        <xctk:IntegerUpDown d:IsHidden="True" MinWidth="80" Height="20" Maximum="500" Value="{Binding TouchSens}" IsEnabled="{Binding TouchSenExists}" Margin="8,0,0,0" />
                                    </StackPanel>

                                    <CheckBox Content="{lex:Loc JitterCompensation}" Grid.Row="0" Grid.Column="1" IsChecked="{Binding TouchJitter}" VerticalAlignment="Center"
                                                          ToolTip="{lex:Loc Resources:Jitter}" />

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Margin="{StaticResource spaceMargin}">
                                        <CheckBox Content="{lex:Loc TouchTap}" IsChecked="{Binding TouchTapExists}" VerticalAlignment="Center" />
                                        <xctk:IntegerUpDown Value="{Binding TouchTap}" d:IsHidden="True" MinWidth="80" Height="20" IsEnabled="{Binding TouchTapExists}" Margin="8,0,0,0" />
                                    </StackPanel>

                                    <CheckBox Content="{lex:Loc DoubleTap}" Grid.Row="1" Grid.Column="1" IsChecked="{Binding TouchDoubleTap}" VerticalAlignment="Center"
                                                          ToolTip="{lex:Loc Resources:TapAndHold}" />

                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Margin="{StaticResource spaceMargin}">
                                        <CheckBox Content="{lex:Loc TouchScroll}" IsChecked="{Binding TouchScrollExists}" VerticalAlignment="Center" />
                                        <xctk:IntegerUpDown Value="{Binding TouchScroll}" d:IsHidden="True" MinWidth="80" Height="20" IsEnabled="{Binding TouchScrollExists}" Margin="8,0,0,0" />
                                    </StackPanel>

                                    <CheckBox Content="{lex:Loc LowerRightAsRMB}" Grid.Row="2" Grid.Column="1" IsChecked="{Binding LowerRightTouchRMB}" VerticalAlignment="Center"
                                                          ToolTip="{lex:Loc Resources:BestUsedRightSide}" />

                                    <CheckBox Content="{lex:Loc PassthruClickAction}" Grid.Row="3" Grid.Column="0" IsChecked="{Binding TouchpadClickPassthru}" VerticalAlignment="Center" />
                                </Grid>

                                <CheckBox Content="{lex:Loc StartTouchpadOff}" IsChecked="{Binding StartTouchpadOff}" VerticalAlignment="Center"
                                                    ToolTip="{lex:Loc Resources:TouchpadOffTip}" Margin="0,10,0,0" />

                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc Rotation}" ContentStringFormat="{}{0}:" />
                                    <xctk:DoubleUpDown d:IsHidden="True" MinWidth="80" Height="20" Minimum="-180" Maximum="180" Increment="1" FormatString="F0" Value="{Binding TouchRelMouseRotation,FallbackValue='0'}" Margin="8,0,0,0" />
                                    <TextBlock Text="&#xb0;" FontSize="18" Margin="{StaticResource spaceMargin}" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc MinThreshold}" ContentStringFormat="{}{0}:" />
                                    <xctk:DoubleUpDown d:IsHidden="True" MinWidth="80" Height="20" Minimum="1.0" Maximum="40.0" Increment="1.0" FormatString="F1" Value="{Binding TouchRelMouseMinThreshold,FallbackValue='1.0'}" Margin="8,0,0,0" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Height="20" Margin="{StaticResource spaceMargin}">
                                    <CheckBox Content="{lex:Loc Trackball}" IsChecked="{Binding TouchTrackball}" VerticalAlignment="Center" />
                                    <Label Content="{lex:Loc Friction}" Padding="0" Margin="20,0,5,0" VerticalAlignment="Center"/>
                                    <xctk:DoubleUpDown x:Name="frictionUD" d:IsHidden="True" MinWidth="80" IsEnabled="{Binding TouchTrackball}" Minimum="0.1" Maximum="20.0"
                                                               Value="{Binding TouchTrackballFriction,FallbackValue='10'}" ValueChanged="FrictionUD_ValueChanged" Margin="8,0,0,0" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc Invert}" Padding="0" HorizontalAlignment="Center" />
                                    <ComboBox MinWidth="160" SelectedIndex="{Binding TouchInvertIndex}" Margin="20,0,0,0">
                                        <ComboBoxItem Content="None" />
                                        <ComboBoxItem Content="X" />
                                        <ComboBoxItem Content="Y" />
                                        <ComboBoxItem Content="X+Y" />
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc DisableInvert}" Padding="0" HorizontalAlignment="Center" />
                                    <Button x:Name="touchDisInvertBtn" MinWidth="160"  Height="22" Content="{Binding TouchDisInvertString,FallbackValue=None}" Click="TouchDisInvertBtn_Click" Margin="20,0,0,0">
                                        <Button.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{lex:Loc Cross}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Circle}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Square}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Triangle}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc L1}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc L2}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc R1}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc R2}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Up}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Down}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Left}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Right}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc L3}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc R3}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc FingerOnTouchpad}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc TwoFingersOnTouchpad}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Options}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Share}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc PS}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc TouchpadClick}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                                <MenuItem Header="{lex:Loc Mute}" IsCheckable="True" Click="TouchDisInvertMenuItem_Click" />
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                </StackPanel>

                            </StackPanel>
                        </TabItem>

                        <TabItem Header="{lex:Loc Controls}" Visibility="Collapsed">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                                    <Button x:Name="swipeUpBtn" Content="{lex:Loc SwipeUp}" MinWidth="100" Tag="{Binding SwipeUp, Source={StaticResource controlIndexCheck}}" Click="SwipeControlsButton_Click" />
                                    <Label x:Name="swipeUpLb" Content="{Binding MappingName,FallbackValue=Unassigned}"  Margin="10,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,8,0,0">
                                    <Button x:Name="swipeDownBtn" Content="{lex:Loc SwipeDown}" MinWidth="100" Tag="{Binding SwipeDown, Source={StaticResource controlIndexCheck}}" Click="SwipeControlsButton_Click" />
                                    <Label x:Name="swipeDownLb" Content="{Binding MappingName,FallbackValue=Unassigned}"  Margin="10,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,8,0,0">
                                    <Button x:Name="swipeLeftBtn" Content="{lex:Loc SwipeLeft}" MinWidth="100" Tag="{Binding SwipeLeft, Source={StaticResource controlIndexCheck}}" Click="SwipeControlsButton_Click" />
                                    <Label x:Name="swipeLeftLb" Content="{Binding MappingName,FallbackValue=Unassigned}"  Margin="10,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,8,0,10">
                                    <Button x:Name="swipeRightBtn" Content="{lex:Loc SwipeRight}" MinWidth="100" Tag="{Binding SwipeRight, Source={StaticResource controlIndexCheck}}" Click="SwipeControlsButton_Click" />
                                    <Label x:Name="swipeRightLb" Content="{Binding MappingName,FallbackValue=Unassigned}"  Margin="10,0,0,0"/>
                                </StackPanel>

                                <CheckBox Content="{lex:Loc PassthruClickAction}" IsChecked="{Binding TouchpadClickPassthru}" VerticalAlignment="Center"
                                                          Margin="5,8,0,0" />
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="{lex:Loc AbsoluteMouse}" Visibility="Collapsed">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc MaxZoneX_}" />
                                    <xctk:IntegerUpDown d:IsHidden="True" MinWidth="80" Height="20" Minimum="0" Maximum="100" Value="{Binding TouchAbsMouseMaxZoneX}" Margin="8,0,0,0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc MaxZoneY_}" />
                                    <xctk:IntegerUpDown d:IsHidden="True" MinWidth="80" Height="20" Minimum="0" Maximum="100" Value="{Binding TouchAbsMouseMaxZoneY}" Margin="8,0,0,0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                    <Label Content="{lex:Loc SnapToCenterOnRelease}" />
                                    <CheckBox IsChecked="{Binding TouchAbsMouseSnapCenter}" VerticalAlignment="Center" Margin="8,0,0,0" />
                                </StackPanel>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="{lex:Loc Passthru}" Visibility="Collapsed" />
                    </TabControl>
                </StackPanel>
            </TabItem>

            <TabItem Header="{lex:Loc Gyro}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <Label Content="{lex:Loc OutputMode}" />
                            <ComboBox x:Name="gyroOutModeCombo" Width="160" SelectedIndex="{Binding GyroOutModeIndex, FallbackValue=0}" VerticalContentAlignment="Center" Margin="10,0,0,0">
                                <ComboBoxItem Content="Controls" />
                                <ComboBoxItem Content="Mouse" />
                                <ComboBoxItem Content="Mouse Joystick" />
                                <ComboBoxItem Content="Directional Swipe" />
                                <ComboBoxItem Content="Passthru" />
                            </ComboBox>
                        </StackPanel>

                        <StackPanel x:Name="gyroControlsPanel" Visibility="Visible">
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroZNBtn" Content="{lex:Loc TiltUp}" Width="100" Tag="{Binding TiltUp, Source={StaticResource controlIndexCheck}}" Click="TiltControlsButton_Click" />
                                <Label x:Name="gyroZNLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroZPBtn" Content="{lex:Loc TiltDown}" Width="100" Tag="{Binding TiltDown, Source={StaticResource controlIndexCheck}}" Click="TiltControlsButton_Click" />
                                <Label x:Name="gyroZPLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroXPBtn" Content="{lex:Loc TiltLeft}" Width="100" Tag="{Binding TiltLeft, Source={StaticResource controlIndexCheck}}" Click="TiltControlsButton_Click" />
                                <Label x:Name="gyroXLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroXNBtn" Content="{lex:Loc TiltRight}" Width="100" Tag="{Binding TiltRight, Source={StaticResource controlIndexCheck}}" Click="TiltControlsButton_Click" />
                                <Label x:Name="gyroXNLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,16,0,0">
                                <Label Content="{lex:Loc Triggers}" />
                                <Button x:Name="gyroControlsTrigBtn" Content="{Binding GyroControlsTrigDisplay,FallbackValue='Always On'}" MinWidth="160" Click="GyroControlsTrigBtn_Click" >
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{lex:Loc Cross}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Circle}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Square}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Triangle}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L1}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L2}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R1}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R2}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Up}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Down}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Left}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Right}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L3}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R3}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc FingerOnTouchpad}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TwoFingersOnTouchpad}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Options}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Share}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc PS}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TouchpadClick}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Mute}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc AlwaysOn}" IsCheckable="True" Click="GyroControlsMenuItem_Click" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                <CheckBox Content="{lex:Loc TurnBehaviorTurnsGyro}"
                                  IsChecked="{Binding GyroControlsTurns}" ToolTip="{lex:Loc Resources:GyroTriggerBehavior}" />
                                <CheckBox Content="{lex:Loc Toggle}" IsChecked="{Binding GyroControlsToggle}" Margin="20,0,0,0" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                <Label Content="{lex:Loc EvalCond}" />
                                <ComboBox SelectedIndex="{Binding GyroControlsEvalCondIndex,FallbackValue=0}" Margin="8,0,0,0">
                                    <ComboBoxItem Content="And" />
                                    <ComboBoxItem Content="Or" />
                                </ComboBox>
                            </StackPanel>

                            <GroupBox Header="{lex:Loc 360SteeringWheel}" Margin="0,16,0,0" Padding="2,4">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                        <Label Content="{lex:Loc SteeringWheelAxis}" />
                                        <ComboBox Width="160" Margin="8,0,0,0" SelectedIndex="{Binding SASteeringWheelEmulationAxisIndex,FallbackValue=0}">
                                            <ComboBoxItem Content="None" />
                                            <ComboBoxItem Content="Left X-Axis" />
                                            <ComboBoxItem Content="Left Y-Axis" />
                                            <ComboBoxItem Content="Right X-Axis" />
                                            <ComboBoxItem Content="Right Y-Axis" />
                                            <ComboBoxItem Content="Trigger L+R Axis" />
                                            <ComboBoxItem Content="VJoy1 X-Axis" />
                                            <ComboBoxItem Content="VJoy1 Y-Axis" />
                                            <ComboBoxItem Content="VJoy1 Z-Axis" />
                                            <ComboBoxItem Content="VJoy2 X-Axis" />
                                            <ComboBoxItem Content="VJoy2 Y-Axis" />
                                            <ComboBoxItem Content="VJoy2 Z-Axis" />
                                        </ComboBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                        <Label Content="{lex:Loc SteeringWheelRange}" />
                                        <ComboBox Margin="8,0,0,0" SelectedIndex="{Binding SASteeringWheelEmulationRangeIndex,FallbackValue=0}">
                                            <ComboBoxItem Content="90" />
                                            <ComboBoxItem Content="180" />
                                            <ComboBoxItem Content="270" />
                                            <ComboBoxItem Content="360" />
                                            <ComboBoxItem Content="450" />
                                            <ComboBoxItem Content="720" />
                                            <ComboBoxItem Content="900" />
                                            <ComboBoxItem Content="1080" />
                                            <ComboBoxItem Content="1440" />
                                        </ComboBox>
                                        <Button x:Name="steeringWheelEmulationCalibrateBtn" Content="{lex:Loc Calibrate}" Margin="8,0,0,0"
                                        Click="SteeringWheelEmulationCalibrateBtn_Click" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                        <Label Content="{lex:Loc Fuzz}" />
                                        <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding SASteeringWheelFuzz}"
                                                    Minimum="0" Maximum="100"
                                                    Margin="{StaticResource spaceMargin}" />
                                        <TextBlock Text="units" FontSize="10" Margin="{StaticResource spaceMargin}" VerticalAlignment="Center" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                        <CheckBox Content="{lex:Loc UseSmoothing}" IsChecked="{Binding SASteeringWheelUseSmoothing}" />
                                    </StackPanel>

                                    <StackPanel x:Name="euroFilterOptionsPanel" IsEnabled="{Binding SASteeringWheelUseSmoothing,FallbackValue=False}"
                                            Orientation="Horizontal" Margin="0,0,0,8">
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="{lex:Loc OneEuroMinCutoff}" />
                                            <xctk:DoubleUpDown x:Name="euroMinCutoff" d:IsHidden="True" FormatString="F5" Value="{Binding SASteeringWheelSmoothMinCutoff,FallbackValue=1.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.00001" Maximum="1000.0" Increment="0.1" MinWidth="60" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                                            <Label Content="{lex:Loc OneEuroBeta}" />
                                            <xctk:DoubleUpDown x:Name="euroBeta" d:IsHidden="True" FormatString="F5" Value="{Binding SASteeringWheelSmoothBeta,FallbackValue=0.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.0" Maximum="1.0" MinWidth="60" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                                <Button x:Name="gyroCalBtn" Content="{lex:Loc GyroCalibration}" Width="100"  Click="GyroCalibration_Click" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="gyroMousePanel" Visibility="Collapsed" Margin="{StaticResource spaceMargin}">
                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc Triggers}" />
                                <Button x:Name="gyroMouseTrigBtn" Content="{Binding GyroMouseTrigDisplay,FallbackValue=Always On}" MinWidth="160" Click="GyroMouseTrigBtn_Click" >
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{lex:Loc Cross}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Circle}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Square}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Triangle}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L1}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L2}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R1}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R2}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Up}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Down}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Left}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Right}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L3}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R3}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc FingerOnTouchpad}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TwoFingersOnTouchpad}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Options}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Share}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc PS}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TouchpadClick}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Mute}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc AlwaysOn}" IsCheckable="True" Click="GyroMouseTrigMenuItem_Click" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </StackPanel>

                            <CheckBox Content="{lex:Loc TurnBehaviorTurnsGyro}" Margin="{StaticResource spaceMargin}"
                                  IsChecked="{Binding GyroMouseTurns}" ToolTip="{lex:Loc Resources:GyroTriggerBehavior}" />
                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc GyroSensitivity}" />
                                <xctk:IntegerUpDown d:IsHidden="True" MinWidth="50" Margin="8,0,0,0" Value="{Binding GyroSensitivity}"
                                                Minimum="0" Maximum="500" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc VerticalScale_}" />
                                <xctk:IntegerUpDown d:IsHidden="True" MinWidth="50" Margin="8,0,0,0" Value="{Binding GyroVertScale}"
                                                Minimum="0" Maximum="400" Increment="10" />
                                <Label Content="%" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <StackPanel>
                                    <Label Content="{lex:Loc EvalCond}" Margin="{StaticResource spaceMargin}" />
                                    <ComboBox SelectedIndex="{Binding GyroMouseEvalCondIndex,FallbackValue=0}">
                                        <ComboBoxItem Content="And" />
                                        <ComboBoxItem Content="Or" />
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Margin="20,0,0,0">
                                    <Label Content="{lex:Loc XAxis}" Margin="{StaticResource spaceMargin}" />
                                    <ComboBox SelectedIndex="{Binding GyroMouseXAxis,FallbackValue=0}">
                                        <ComboBoxItem Content="Yaw" />
                                        <ComboBoxItem Content="Roll" />
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc Invert}" Padding="0"/>
                                <CheckBox Content="{lex:Loc GyroMouseInvertX}" Margin="8,0,0,0" IsChecked="{Binding GyroMouseInvertX}" />
                                <CheckBox Content="{lex:Loc GyroMouseInvertY}" Margin="8,0,0,0" IsChecked="{Binding GyroMouseInvertY}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc Deadzone}" />
                                <xctk:IntegerUpDown d:IsHidden="True" MinWidth="60" Margin="8,0,0,0"
                                                Value="{Binding GyroMouseDeadZone}" Minimum="0" Maximum="1000" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc MinThreshold}" ContentStringFormat="{}{0}:" />
                                <xctk:DoubleUpDown d:IsHidden="True" MinWidth="80" Height="20" Minimum="1.0" Maximum="40.0" Increment="1.0" FormatString="F1" Value="{Binding GyroMouseMinThreshold,FallbackValue='1.0'}" Margin="8,0,0,0" />
                            </StackPanel>

                            <CheckBox Content="{lex:Loc Toggle}" IsChecked="{Binding GyroMouseToggle}" Margin="{StaticResource spaceMargin}" />

                            <CheckBox Content="{lex:Loc Smoothing}" IsChecked="{Binding GyroMouseSmooth,FallbackValue='False'}"  Margin="{StaticResource spaceMargin}" />
                            <GroupBox Header="{lex:Loc ProfileEditor1366}" IsEnabled="{Binding GyroMouseSmooth,FallbackValue='False'}" Margin="{StaticResource spaceMargin}">
                                <StackPanel>
                                    <ComboBox x:Name="gyroMouseSmoothMethodCombo" Margin="{StaticResource spaceMargin}" SelectedIndex="{Binding GyroMouseSmoothMethodIndex,FallbackValue='0'}">
                                        <ComboBoxItem Content="1&#x20ac; Filter" />
                                        <ComboBoxItem Content="Weighted Average" />
                                    </ComboBox>

                                    <StackPanel x:Name="gyroMouseOneEuroPanel" Orientation="Horizontal" Margin="{StaticResource spaceMargin}" Visibility="{Binding GyroMouseOneEuroPanelVisibility,FallbackValue='Visible'}">
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="{lex:Loc OneEuroMinCutoff}" />
                                            <xctk:DoubleUpDown d:IsHidden="True" FormatString="F5" Value="{Binding GyroMouseOneEuroMinCutoff,FallbackValue=1.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.00001" Maximum="100.0" Increment="0.1" MinWidth="60" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                                            <Label Content="{lex:Loc OneEuroBeta}" />
                                            <xctk:DoubleUpDown  d:IsHidden="True" FormatString="F5" Value="{Binding GyroMouseOneEuroBeta,FallbackValue=0.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.0" Maximum="1.0" Increment="0.1" MinWidth="60" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel x:Name="gyroMouseWeightedAvgPanel" Orientation="Horizontal" Margin="{StaticResource spaceMargin}" Visibility="{Binding GyroMouseWeightAvgPanelVisibility,FallbackValue='Collapsed'}">
                                        <Label Content="{lex:Loc SmoothWeight}" Padding="0" />
                                        <xctk:DoubleUpDown d:IsHidden="True" MinWidth="60" Margin="8,0,0,0"
                                                   Value="{Binding GyroMouseSmoothWeight}" Minimum="0.0" Maximum="1.0" Increment="0.1" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                                <Button x:Name="gyroCalBtn4" Content="{lex:Loc GyroCalibration}" Width="100"  Click="GyroCalibration_Click" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="gyroMouseJoystickPanel" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc Triggers}" />
                                <Button x:Name="gyroMouseStickTrigBtn" Content="{Binding GyroMouseStickTrigDisplay,FallbackValue='Always On'}" MinWidth="160"
                                    Margin="8,0,0,0" Click="GyroMouseStickTrigBtn_Click" >
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{lex:Loc Cross}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Circle}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Square}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Triangle}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L1}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L2}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R1}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R2}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Up}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Down}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Left}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Right}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L3}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R3}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc FingerOnTouchpad}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TwoFingersOnTouchpad}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Options}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Share}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc PS}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TouchpadClick}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Mute}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc AlwaysOn}" IsCheckable="True" Click="GyroMouseStickTrigMenuItem_Click" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <CheckBox Content="{lex:Loc TurnBehaviorTurnsGyro}" IsChecked="{Binding GyroMouseStickTurns}"
                                      ToolTip="{lex:Loc Resources:GyroTriggerBehavior}" />
                                <CheckBox Content="{lex:Loc Toggle}" Margin="8,0,0,0" IsChecked="{Binding GyroMouseStickToggle}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc Dead_Zone}" />
                                <xctk:IntegerUpDown d:IsHidden="True" Margin="8,0,0,0" Value="{Binding GyroMouseStickDeadZone}" MinWidth="60" />
                                <Label Content="{lex:Loc MaxZone}" Margin="8,0,0,0" />
                                <xctk:IntegerUpDown d:IsHidden="True" Margin="8,0,0,0" Value="{Binding GyroMouseStickMaxZone}" MinWidth="60"
                                                Minimum="1" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Height="30" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc MinimumX}" />
                                <xctk:DoubleUpDown d:IsHidden="True" Margin="8,0,0,0" Value="{Binding GyroMouseStickAntiDeadX}" MinWidth="60"
                                               FormatString="F0" Minimum="0.0" Maximum="100.0" Increment="10.0" />
                                <Label Content="%" />

                                <Label Content="{lex:Loc MinimumY}" Margin="8,0,0,0" />
                                <xctk:DoubleUpDown d:IsHidden="True" Margin="8,0,0,0" Value="{Binding GyroMouseStickAntiDeadY}" MinWidth="60"
                                               FormatString="F0" Minimum="0.0" Maximum="100.0" Increment="10.0" />
                                <Label Content="%" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc VerticalScale}" />
                                <xctk:IntegerUpDown d:IsHidden="True" Margin="8,0,0,0" Value="{Binding GyroMouseStickVertScale}" MinWidth="60"
                                                Minimum="0" Maximum="400" Increment="10" />
                                <Label Content="%" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <CheckBox Content="{lex:Loc MaxOutput}" IsChecked="{Binding GyroMouseStickMaxOutputEnabled,FallbackValue=False}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <xctk:DoubleUpDown d:IsHidden="True" Margin="8,0,0,0" Value="{Binding GyroMouseStickMaxOutput}" IsEnabled="{Binding GyroMouseStickMaxOutputEnabled,FallbackValue=False}"
                                               FormatString="F0" MinWidth="60" Maximum="100.0" Minimum="0.0" Increment="10.0" />
                                <Label Content="%" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc EvalCond}" />
                                <ComboBox SelectedIndex="{Binding GyroMouseStickEvalCondIndex,FallbackValue=0}" Margin="8,0,0,0">
                                    <ComboBoxItem Content="And" />
                                    <ComboBoxItem Content="Or" />
                                </ComboBox>

                                <Label Content="{lex:Loc XAxis}" Margin="20,0,0,0" />
                                <ComboBox SelectedIndex="{Binding GyroMouseStickXAxis,FallbackValue=0}" Margin="8,0,0,0">
                                    <ComboBoxItem Content="Yaw" />
                                    <ComboBoxItem Content="Roll" />
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <CheckBox Content="{lex:Loc InvertX}" IsChecked="{Binding GyroMouseStickInvertX}"/>
                                <CheckBox Content="{lex:Loc InvertY}" Margin="10,0,0,0" IsChecked="{Binding GyroMouseStickInvertY}" />
                            </StackPanel>

                            <CheckBox Content="{lex:Loc Smoothing}" IsChecked="{Binding GyroMouseStickSmooth}" Margin="{StaticResource spaceMargin}" />
                            <GroupBox Header="{lex:Loc ProfileEditor1493}" IsEnabled="{Binding GyroMouseStickSmooth,FallbackValue='False'}" Margin="{StaticResource spaceMargin}">
                                <StackPanel>
                                    <ComboBox x:Name="gyroMouseStickSmoothMethodCombo" Margin="{StaticResource spaceMargin}" SelectedIndex="{Binding GyroMouseStickSmoothMethodIndex,FallbackValue='0'}">
                                        <ComboBoxItem Content="1&#x20ac; Filter" />
                                        <ComboBoxItem Content="Weighted Average" />
                                    </ComboBox>

                                    <StackPanel x:Name="gyroMouseStickOneEuroPanel" Orientation="Horizontal" Margin="{StaticResource spaceMargin}" Visibility="{Binding GyroMouseStickOneEuroPanelVisibility,FallbackValue='Visible'}">
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="{lex:Loc OneEuroMinCutoff}" />
                                            <xctk:DoubleUpDown d:IsHidden="True" FormatString="F5" Value="{Binding GyroMouseStickOneEuroMinCutoff,FallbackValue=1.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.00001" Maximum="100.0" Increment="0.1" MinWidth="60" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                                            <Label Content="{lex:Loc OneEuroBeta}" />
                                            <xctk:DoubleUpDown d:IsHidden="True" FormatString="F5" Value="{Binding GyroMouseStickOneEuroBeta,FallbackValue=0.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.0" Maximum="1.0" Increment="0.1" MinWidth="60" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel x:Name="gyroMouseStickWeightedAvgPanel" Orientation="Horizontal" Margin="{StaticResource spaceMargin}" Visibility="{Binding GyroMouseStickWeightAvgPanelVisibility,FallbackValue='Collapsed'}">
                                        <Label Content="{lex:Loc Weight}" Padding="0" Margin="20,0,0,0" />
                                        <xctk:DoubleUpDown d:IsHidden="True" Margin="8,0,0,0" FormatString="F2" Value="{Binding GyroMouseStickSmoothWeight}"
                                               Minimum="0.0" Maximum="1.0" Increment="0.1" MinWidth="60" IsEnabled="{Binding GyroMouseStickSmooth}" />
                                    </StackPanel>

                                </StackPanel>
                            </GroupBox>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                                <Button x:Name="gyroCalBtn1" Content="{lex:Loc GyroCalibration}" Width="100"  Click="GyroCalibration_Click" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="gyroDirSwipePanel" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroSwipeUpBtn" Content="{lex:Loc SwipeUp}" Width="100" Tag="{Binding GyroSwipeUp, Source={StaticResource controlIndexCheck}}" Click="GyroSwipeControlsBtn_Click" />
                                <Label x:Name="gyroSwipeUpLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroSwipeDownBtn" Content="{lex:Loc SwipeDown}" Width="100" Tag="{Binding GyroSwipeDown, Source={StaticResource controlIndexCheck}}" Click="GyroSwipeControlsBtn_Click" />
                                <Label x:Name="gyroSwipeDownLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroSwipeLeftBtn" Content="{lex:Loc SwipeLeft}" Width="100" Tag="{Binding GyroSwipeLeft, Source={StaticResource controlIndexCheck}}" Click="GyroSwipeControlsBtn_Click" />
                                <Label x:Name="gyroSwipeLeftLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Button x:Name="gyroSwipeRightBtn" Content="{lex:Loc SwipeRight}" Width="100" Tag="{Binding GyroSwipeRight, Source={StaticResource controlIndexCheck}}" Click="GyroSwipeControlsBtn_Click" />
                                <Label x:Name="gyroSwipeRightLb" Content="{Binding MappingName,FallbackValue=Unassigned}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                <Label Content="{lex:Loc Triggers}" />
                                <Button x:Name="gyroSwipeTrigBtn" Content="{Binding GyroSwipeTrigDisplay,FallbackValue=Always On}" MinWidth="160" Click="GyroSwipeTrigBtn_Click" >
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{lex:Loc Cross}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Circle}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Square}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Triangle}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L1}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L2}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R1}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R2}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Up}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Down}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Left}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Right}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc L3}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc R3}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc FingerOnTouchpad}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TwoFingersOnTouchpad}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Options}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Share}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc PS}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc TouchpadClick}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc Mute}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                            <MenuItem Header="{lex:Loc AlwaysOn}" IsCheckable="True" Click="GyroSwipeTrigMenuItem_Click" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </StackPanel>

                            <CheckBox Content="{lex:Loc TurnBehaviorTurnsGyro}" Margin="0,8,0,0"
                                  IsChecked="{Binding GyroSwipeTurns}" ToolTip="{lex:Loc Resources:GyroTriggerBehavior}" />

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <StackPanel>
                                    <Label Content="{lex:Loc EvalCond}" Margin="{StaticResource spaceMargin}" />
                                    <ComboBox SelectedIndex="{Binding GyroSwipeEvalCondIndex,FallbackValue=0}">
                                        <ComboBoxItem Content="And" />
                                        <ComboBoxItem Content="Or" />
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Margin="20,0,0,0">
                                    <Label Content="{lex:Loc XAxis}" Margin="{StaticResource spaceMargin}" />
                                    <ComboBox SelectedIndex="{Binding GyroSwipeXAxis,FallbackValue=0}">
                                        <ComboBoxItem Content="Yaw" />
                                        <ComboBoxItem Content="Roll" />
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc DeadzoneX}" />
                                <xctk:IntegerUpDown d:IsHidden="True" MinWidth="60" Margin="8,0,0,0"
                                                Value="{Binding GyroSwipeDeadZoneX}" Minimum="0" Maximum="2000" />
                                <Label Content="{lex:Loc DegPerSec}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="{StaticResource spaceMargin}">
                                <Label Content="{lex:Loc DeadzoneY}" />
                                <xctk:IntegerUpDown d:IsHidden="True" MinWidth="60" Margin="8,0,0,0"
                                                Value="{Binding GyroSwipeDeadZoneY}" Minimum="0" Maximum="2000" />
                                <Label Content="{lex:Loc DegPerSec}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <Label Content="{lex:Loc DelayTime}" ContentStringFormat="{}{0}:" />
                                <xctk:IntegerUpDown d:IsHidden="True" MinWidth="60" Margin="8,0,0,0"
                                                Value="{Binding GyroSwipeDelayTime}" Minimum="0" Maximum="5000" Increment="10" />
                                <Label Content="{lex:Loc Ms}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                                <Button x:Name="gyroCalBtn2" Content="{lex:Loc GyroCalibration}" Width="100"  Click="GyroCalibration_Click" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="passthruPanel" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                                <Button x:Name="gyroCalBtn3" Content="{lex:Loc GyroCalibration}" Width="100"  Click="GyroCalibration_Click" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="{lex:Loc Other}">
                <StackPanel>
                    <GroupBox Header="{lex:Loc Rumble}" MinHeight="50" Margin="4,4,4,0" Padding="0,4,0,4">
                        <UniformGrid Rows="1" Columns="3">
                            <UniformGrid Columns="2" HorizontalAlignment="Left">
                                <DockPanel>
                                    <Label Content="%" DockPanel.Dock="Right" />
                                    <xctk:IntegerUpDown x:Name="RumbleBoostIUD" d:IsHidden="True" Value="{Binding RumbleBoost}" Minimum="0" Maximum="200" Increment="10"
                                                       MinWidth="50" DockPanel.Dock="Left" />
                                </DockPanel>

                                <DockPanel>
                                    <Label Content="{lex:Loc RumbleMaxSecs}" DockPanel.Dock="Right" />
                                    <xctk:IntegerUpDown x:Name="RumbleAutostopTimeIUD" d:IsHidden="True" Value="{Binding RumbleAutostopTime}" Minimum="0" Maximum="3600" Increment="1" ToolTip="{lex:Loc RumbleMaxSecsTip}"
                                                       MinWidth="50" DockPanel.Dock="Left"/>
                                </DockPanel>
                            </UniformGrid>

                            <Button x:Name="heavyRumbleTestBtn" Content="{lex:Loc TestHeavy}" Margin="10,0,0,0" Click="HeavyRumbleTestBtn_Click" />
                            <Button x:Name="lightRumbleTestBtn" Content="{lex:Loc TestLight}" Margin="10,0,0,0" Click="LightRumbleTestBtn_Click" />
                        </UniformGrid>
                    </GroupBox>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                        <Label Content="{lex:Loc UseController}" ToolTip="{lex:Loc Resources:UseControllerForMapping}" />
                        <xctk:IntegerUpDown x:Name="useControllerUD" d:IsHidden="True" Width="40" Margin="8,0,0,0"
                                            Value="0" Minimum="0" Maximum="4" IsEnabled="False"
                                            ToolTip="{lex:Loc Resources:UseControllerForMapping}" />
                        <CheckBox x:Name="useControllerReadoutCk" FlowDirection="RightToLeft" Content="{lex:Loc ForReadout}" VerticalAlignment="Center"
                                  Margin="8,0,0,0" IsChecked="{Binding UseControllerReadout}"
                                  ToolTip="{lex:Loc Resources:UseControllerForMapping}" Click="UseControllerReadoutCk_Click">
                            <CheckBox.Resources>
                                <Style TargetType="{x:Type Path}">
                                    <Setter Property="FlowDirection" Value="LeftToRight"/>
                                </Style>
                            </CheckBox.Resources>
                        </CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Height="40" Margin="0,4,0,0">
                        <Label Content="{lex:Loc MouseSensitivity}" VerticalAlignment="Center" />
                        <xctk:IntegerUpDown d:IsHidden="True" MinWidth="50" Height="20"
                                            Value="{Binding ButtonMouseSensitivity,FallbackValue=25}"
                                            Minimum="0" Maximum="255" Increment="1" Margin="10,0,0,0" />
                        <TextBlock Text="{Binding OutputMouseSpeed,Mode=OneWay,StringFormat='\{0} pps'}"
                                   MinWidth="50" VerticalAlignment="Center"  Margin="10,0,0,0" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Height="40">
                        <Label Content="{lex:Loc MouseVerticalScale}" ContentStringFormat="{}{0}:" VerticalAlignment="Center" />
                        <xctk:IntegerUpDown d:IsHidden="True" MinWidth="50" Height="20"
                            Value="{Binding ButtonMouseVerticalScale,FallbackValue='100'}"
                            Minimum="0" Maximum="500" Increment="10" Margin="10,0,0,0" />
                        <Label Content="%" VerticalContentAlignment="Center" Margin="4,0,0,0" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{lex:Loc MouseOffset}" VerticalAlignment="Center" />
                        <xctk:DoubleUpDown d:IsHidden="True" MinWidth="50" FormatString="F3" DefaultValue="0" Minimum="0" Maximum="100"
                                           Value="{Binding ButtonMouseOffset,FallbackValue=0,UpdateSourceTrigger=LostFocus}" />
                        <Label Content="%"/>
                        <TextBlock Text="{Binding MouseOffsetSpeed,Mode=OneWay,StringFormat='\{0:0.00} pps'}"
                                   MinWidth="50" VerticalAlignment="Center" Margin="10,0,0,0" />
                    </StackPanel>
                    <CheckBox Content="{lex:Loc MouseAcceleration}" IsChecked="{Binding MouseAcceleration}" Margin="0,6,0,0" />
                    <CheckBox Content="{lex:Loc EnableTouchpadToggle}" IsChecked="{Binding EnableTouchpadToggle}" Margin="0,6,0,0"
                              ToolTip="{lex:Loc Resources:EnableTouchToggle}" />
                    <CheckBox Content="{lex:Loc EnableOutputDataToDS4}" IsChecked="{Binding EnableOutputDataToDS4}" Margin="0,6,0,0" ToolTip="{lex:Loc EnableOutputDataToDS4Tip}" />
                    <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                        <CheckBox x:Name="launchProgCk" Content="{lex:Loc LaunchProgramWithProfile}" IsChecked="{Binding LaunchProgramExists}" IsEnabled="{Binding LaunchProgramExists}" />
                        <Button x:Name="launchProgBrowseBtn" Click="LaunchProgBrowseBtn_Click" Width="80" Height="30" Margin="20,0,0,0">
                            <Button.Content>
                                <PriorityBinding>
                                    <Binding Path="LaunchProgramName" />
                                    <lex:BLoc Key="Browse" />
                                </PriorityBinding>
                            </Button.Content>
                        </Button>
                        <Button x:Name="launchProgIconBtn" Width="20" Height="20" Margin="20,0,0,0" Focusable="False" >
                            <Button.Background>
                                <ImageBrush ImageSource="{Binding LaunchProgramIcon}" />
                            </Button.Background>
                        </Button>
                    </StackPanel>
                    <CheckBox Content="{lex:Loc UseDInputOnly}" IsChecked="{Binding DInputOnly}"
                              ToolTip="{lex:Loc Resources:DinputOnly}" Margin="0,6,0,0" />
                    <StackPanel Orientation="Horizontal" Height="30" Margin="0,6,0,0">
                        <CheckBox Content="{lex:Loc IdleDisconnect}" VerticalAlignment="Center" IsChecked="{Binding IdleDisconnectExists}" />
                        <xctk:IntegerUpDown x:Name="idleDisconnectUD" d:IsHidden="True" Value="{Binding IdleDisconnect,FallbackValue=5}"
                                            IsEnabled="{Binding IdleDisconnectExists}" MinWidth="50" Height="20" Minimum="0" Maximum="60" Margin="10,0,0,0" />
                        <Label Content="{lex:Loc Mins}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                        <Label Content="{lex:Loc BTPollRate}" ToolTip="{lex:Loc Resources:BtPollRate}" />
                        <ComboBox x:Name="btPollRateCombo" SelectedIndex="{Binding TempBTPollRateIndex,FallbackValue=4}" MinWidth="140"
                                  ToolTip="{lex:Loc Resources:BtPollRate}">
                            <ComboBoxItem Content="Max (1 ms)" />
                            <ComboBoxItem Content="1000 Hz (1 ms)" />
                            <ComboBoxItem Content="500 Hz (2 ms)" />
                            <ComboBoxItem Content="333 Hz (3 ms)" />
                            <ComboBoxItem Content="250 Hz (4 ms)" />
                            <ComboBoxItem Content="200 Hz (5 ms)" />
                            <ComboBoxItem Content="166 Hz (6 ms)" />
                            <ComboBoxItem Content="142 Hz (7 ms)" />
                            <ComboBoxItem Content="125 Hz (8 ms)" />
                            <ComboBoxItem Content="111 Hz (9 ms)" />
                            <ComboBoxItem Content="100 Hz (10 ms)" />
                            <ComboBoxItem Content="90 Hz (11 ms)" />
                            <ComboBoxItem Content="83 Hz (12 ms)" />
                            <ComboBoxItem Content="76 Hz (13 ms)" />
                            <ComboBoxItem Content="71 Hz (14 ms)" />
                            <ComboBoxItem Content="66 Hz (15 ms)" />
                            <ComboBoxItem Content="62 Hz (16 ms)" />
                      </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                        <Label Content="{lex:Loc EmulatedController}" ToolTip="{lex:Loc Resources:OutContNotice}" />
                        <ComboBox x:Name="outConTypeCombo" SelectedIndex="{Binding TempControllerIndex,FallbackValue=0}" MinWidth="140"
                                  ToolTip="{lex:Loc Resources:OutContNotice}">
                            <ComboBoxItem Content="Xbox 360"/>
                            <ComboBoxItem Content="DualShock 4"/>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>

            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
